import{a5 as f,dt as h,a6 as v,a8 as S,dD as w,U as m,cZ as k,ag as b,dE as E,v as a,x as l,J as F,bF as C,y as $}from"./main-CT9Sftej.js";import{t as P}from"./index-CAIVWTtd.js";import{h as A}from"./UpdatingHandles-DPkmYcJF.js";import{Q as G,L as O,O as H}from"./projection-ytxkZO4D.js";import{a as I}from"./normalizeUtilsSync-BXIWHqkg.js";import{s as R}from"./featureConversionUtils-DpPFLNFL.js";import{s as Z}from"./OptimizedFeatureSet-Dg_eGQ3F.js";import{u as x,f as L}from"./executeQueryForSnapping-D-kK78Ca.js";import{L as z}from"./QueryEngine-CR50AQJB.js";import{Z as M}from"./FieldsIndex-DmhrfWNt.js";import{y as W,E as N,k as j}from"./SketchViewModel-CdeV6v-6.js";import{N as u}from"./utils-BJX349HX.js";import{o as q,i as J}from"./queryEngineUtils-BpJRU9KA.js";import{i as y,r as T,n as g}from"./symbologySnappingCandidates-BTvyaeju.js";import{g as U}from"./Scheduler-CsAtSYcP.js";import"./preload-helper-ExcqyqRp.js";import"./dynamic-import-helper-BheWnx7M.js";import"./draw-store-DdOQakmg.js";import"./GraphicsLayer-CtqzFxRO.js";import"./GraphicsCollection-B8LME2Ry.js";import"./Layer-CnIVAp7J.js";import"./TimeExtent-CaGSvokv.js";import"./ScaleRangeLayer-DDJLeSWf.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-JGIxtYa0.js";import"./parser-CQQ15XIu.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DUkQax45.js";import"./common-DQOJ18NT.js";import"./ElevationInfo-KO_qNWsS.js";import"./lengthUtils-NYgB4jWZ.js";import"./intl-C6kqd5h5.js";import"./jsxFactory-DeYCHYBG.js";import"./uuid-Cl5lrJ4c.js";import"./globalCss-CJbTbQO5.js";import"./Queue-D-oT0jyS.js";import"./signal-Bu8OM-1C.js";import"./Version-BhuRIxpP.js";import"./layerViewUtils-C7VcDHBf.js";import"./widget-BRzuF8vT.js";import"./diffUtils-pgdohj1N.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./vec32-bYhbKW1N.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./meshVertexSpaceUtils-BeSiCv4B.js";import"./MeshLocalVertexSpace-CK6BLqVU.js";import"./hydratedFeatures-CQDcBGsH.js";import"./projectVectorToVector-DPTaXGln.js";import"./projectPointToVector-BWMMB7zO.js";import"./plane-DuQhKn7l.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./quantityUtils-B7NIq4o7.js";import"./geodesicUtils-D3YUJ3H4.js";import"./geometryEngineBase-8g0RzW7z.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-DEMDXIJ7.js";import"./mat2d-D9DBP-jx.js";import"./quat-DnlNHQMO.js";import"./drapedUtils-BYlY3g61.js";import"./utils-BQBvadb7.js";import"./substitute-BHEan6JM.js";import"./normalizeUtils-BPTU8SNt.js";import"./utils-DTVY1tcF.js";import"./utils-EYWIpN-R.js";import"./OptimizedGeometry-BoqNotNk.js";import"./memoryEstimations-B-EvBcKT.js";import"./PooledRBush-XyATne6b.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-DMFileu7.js";import"./queryUtils-5DUb3_b4.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-DlNVvWo6.js";import"./WhereClauseCache-BuEQYzN1.js";import"./LRUCache-C6yADJ1l.js";import"./MemCache-DmhTfSRe.js";import"./WhereClause-haZHqJ_o.js";import"./TimeOnly-CkWipgl2.js";import"./fieldType-DH4pvvGV.js";import"./QueryEngineCapabilities-DZTubngj.js";import"./quantizationUtils-BrqWDQpc.js";import"./utils-ATXxDIjl.js";import"./heatmapUtils-BBCVKSCT.js";import"./utils-u_5g5j00.js";import"./timeZoneUtils-EeUlJk1G.js";import"./ClassBreaksDefinition-BdpcTVUk.js";import"./SnappingCandidate-O5eRSE6e.js";import"./FixedIntervalBinParameters-CWSy1vve.js";import"./NormalizationBinParametersMixin-CiTtn5Jh.js";import"./Query-M_8Q1E1l.js";import"./Field-AWF7lSWN.js";import"./sphere-_9AYA31t.js";import"./mat3-CruJiiUv.js";import"./cimSymbolUtils-Cfs2ZboG.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./VertexSnappingCandidate-DgjZkvl8.js";import"./PointSnappingHint-BiC9HFE_.js";const _="graphics-collections";let n=class extends f{get updating(){return this._updatingHandles.updating}get _hasZ(){const t=this.view;return t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d";if(!i||e.type==="map-notes")return y();const o=async(r,s)=>(await C(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(r,s);return y(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:t}=this,e=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?g(o,async(r,s)=>{const p=await t.whenLayerView(e);return m(s),p.queryForSymbologySnapping({candidates:r,spatialReference:t.spatialReference},s)}):g()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new A,this._memoizedMakeGetGroundElevation=P(J)}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],_)},h);const{view:t}=this,{layer:e}=this.layerSource;t!=null&&t.type==="3d"&&e.type!=="map-notes"&&t.elevationProvider&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{W(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),v(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),h),S(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i,coordinateHelper:{spatialReference:o}}=t,r=await w(this._mapSources(d=>this._fetchCandidatesForSource(d,t,e)));m(e);const s=this._memoizedMakeGetGroundElevation(this.view,o),p=r.flat().map(d=>q(d,s));return N(i,p),p}async _fetchCandidatesForSource(t,e,i){const o=j(e,this.view?.type??"2d"),r=await x(t.queryEngine,o,i);m(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,e.coordinateHelper.spatialReference,i);m(i);const p=await this._symbologySnappingFetcher.fetch(s,i);m(i);const d=p.length===0?s:[...s,...p];return this._snappingElevationFilter.filter(o,d)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=k(async s=>{await G(t.map(p=>({source:p,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(t);for(const p of e.values())this._add(p)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},r=()=>$(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t){e.wkid!=null&&this._loadedWkids.add(e.wkid);const i=e.wkt2||e.wkt;i&&this._loadedWkts.add(i)}}_add(t){if(t.geometry==null||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=b.fromExtent(e));const i=this._ensureSource(e.type);if(i==null)return;const o=this._createOptimizedFeature(t.uid,e);o!=null&&(i.featureStore.add(o),u(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){if(t.wkid!=null&&this._loadedWkids.has(t.wkid))return!1;const e=t.wkt2||t.wkt;return(!e||!this._loadedWkts.has(e))&&!O(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=H(I(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=R(o,this._hasZ,!1);return new Z(r,{[c]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(e!=null)return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=E.toJSON(t),i=this._hasZ,o=new L({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new z({featureStore:o,fieldsIndex:M.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:e,hasM:!1,hasZ:i,objectIdField:c,spatialReference:this.spatialReference,priority:U.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),u(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return e!=null&&s.push(t(e)),i!=null&&s.push(t(i)),o!=null&&s.push(t(o)),r!=null&&s.push(t(r)),s}};a([l()],n.prototype,"getGraphicsLayers",void 0),a([l({constructOnly:!0})],n.prototype,"layerSource",void 0),a([l({constructOnly:!0})],n.prototype,"spatialReference",void 0),a([l({constructOnly:!0})],n.prototype,"view",void 0),a([l({readOnly:!0})],n.prototype,"updating",null),a([l({readOnly:!0})],n.prototype,"availability",void 0),a([l()],n.prototype,"_hasZ",null),a([l()],n.prototype,"_snappingElevationAligner",null),a([l()],n.prototype,"_snappingElevationFilter",null),a([l()],n.prototype,"_symbologySnappingFetcher",null),a([l()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=a([F("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};

import{aO as l,di as h,V as g,b9 as f,B as w,N as d}from"./main-CXTJrYrk.js";import{p as n}from"./SimpleRenderer-Dcfvqput.js";import{fromJSON as u}from"./jsonUtils-B0ErHG-A.js";import{d as b}from"./FeatureSet-9pZlUIRK.js";import{S,y as V}from"./LayerView-IKlh2BcD.js";import{t as _}from"./GraphicContainer-BTKMCh_O.js";import{A as T}from"./GraphicsView2D-r60Hu0P9.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-DSoY-znO.js";import"./colorRamps-Bc3TlUUV.js";import"./ColorStop-C11M1yHu.js";import"./visualVariableUtils-BMjzFwHd.js";import"./lengthUtils-DYdSYbuE.js";import"./typeUtils-DqqUBGPH.js";import"./ClassBreaksRenderer-DLrpdiEG.js";import"./RendererLegendOptions-CpFJxlS-.js";import"./LRUCache-BQ-TfHMR.js";import"./MemCache-Bc3OQ0o8.js";import"./Version-BILeeuDB.js";import"./FieldsIndex-CYGegAK0.js";import"./timeZoneUtils-NHmIl2ax.js";import"./utils-4usbGlDx.js";import"./defaultCIMValues-C-9JHzEu.js";import"./enums-CD-fX3vU.js";import"./heatmapUtils-Cvkl1F2j.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-BAAMDLh6.js";import"./styleUtils-DVdmV2u_.js";import"./Field-qWQ4BiqA.js";import"./fieldType-BAY-ZabS.js";import"./Container-D6RHS8yG.js";import"./MapView-DXgmdT1q.js";import"./Cyclical-DQ3B53pC.js";import"./CollectionFlattener-BVW-tHCz.js";import"./workers-CrEdm-cv.js";import"./Queue-B3OINPDR.js";import"./intl-BoGV7K5G.js";import"./projection-BpKbJTcz.js";import"./projectBuffer-B5xdwYlr.js";import"./TileInfo-BJ3eeYC4.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BydFCO4_.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CdH40bjh.js";import"./signal-D6d4F9aP.js";import"./Map-oSjh4lBZ.js";import"./Basemap-DfyMb95H.js";import"./loadAll-DsTFf-qW.js";import"./PortalItem-cvziCImZ.js";import"./writeUtils-B8G77myp.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DCc6xr6i.js";import"./TablesMixin-Btd2sBIS.js";import"./Layer-CuyN8hRD.js";import"./TimeExtent-pl8UrA47.js";import"./GraphicsCollection-C6ZAC8lp.js";import"./HeightModelInfo-31cT7YRa.js";import"./ReactiveMap-DYumAS5v.js";import"./Query-B3wHXKkM.js";import"./HighlightDefaults-BwX2G67Y.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-NqUx_OCR.js";import"./TileKey-Box2hZAb.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-DAoTYDOg.js";import"./normalizeUtilsCommon-CuVplVdW.js";import"./utils-BJxVbeTO.js";import"./utils-Dbwych2S.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-Cxu_2o2E.js";import"./vec32-CY5xch2-.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-Ds7WFyAc.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-Bb_fB6ts.js";import"./capabilities-Du2wdNlQ.js";import"./ColorBackground-Cn_Lrrc5.js";import"./parser-B2J_XuA2.js";import"./layerViewUtils-BW2OlaJf.js";import"./AGraphicContainer-CGliQzsZ.js";import"./TechniqueInstance-BM_7WYCf.js";import"./UpdateTracking2D-BJsUFXP7.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-D3MECz9o.js";import"./memoryEstimations-jye8GW5w.js";import"./GeometryUtils-Dblxd2e_.js";import"./rasterizingUtils-D6Kol5dA.js";import"./floatRGBA-CINiV_az.js";import"./Rect-CUzevAry.js";import"./Utils-CC3nR1LQ.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./FramebufferObject-7CLwID_L.js";import"./VertexArrayObject-vRY6Idig.js";import"./TileContainer-BRI1qWYH.js";import"./WGLContainer-CFAd6RCr.js";import"./ProgramTemplate-CCbPEeb0.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Bp1wY35y.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-CW4wiU5k.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-f_TD7MRr.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CmfEnscR.js";import"./ShaderBuilder-BZ2kf8c0.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DlzFxfZS.js";import"./OverrideHelper-DQ74KnII.js";import"./colorUtils-D0_phz0E.js";import"./quantizationUtils-B7DZFVug.js";import"./AttributeStore-BDjxeD35.js";import"./labelUtils-BvsA-TUv.js";import"./queryUtils-C-kNUdUU.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DGM8rCEY.js";import"./TimeOnly-BqaOmD17.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CYNDqRHM.js";import"./dehydratedFeatures-CapsVIgf.js";let y=class extends S(V){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const t=this._popupTemplates.get(r),e=r.hitTest(i);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=t;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:i}))}update(i){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(i)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,i=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of i){const t=b.fromJSON(p),e=new g(t.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=a,this._popupTemplates.set(a,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,i=>{this._graphicsViewMap.polygon.renderer=new n({symbol:i})},h),l(()=>this.layer?.lineSymbol,i=>{this._graphicsViewMap.polyline.renderer=new n({symbol:i})},h),l(()=>this.layer?.pointSymbol,i=>{this._graphicsViewMap.point.renderer=new n({symbol:i})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Rt=y;export{Rt as default};

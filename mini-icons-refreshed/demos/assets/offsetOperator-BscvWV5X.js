import{e4 as f,c2 as x}from"./main-CXTJrYrk.js";import{w as G,j as d}from"./operatorOffset-vd0VQ2kK.js";import{getSpatialReference as p,fromGeometry as y,toGeometry as u,fromGeometries as g}from"./jsonConverter-Bfoa5azQ.js";import"./preload-helper-ExcqyqRp.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./ProjectionTransformation-o5bCae85.js";import"./Transformation2D-DZfKTQC6.js";const l={round:0,bevel:1,miter:2,square:3};function b(t,e,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=p(t);r&&o&&(e=f(e,r,o));const i=y(t),n=i.getSpatialReference();return u(G(i.getGeometry(),n,e,l[c],a,s),n)}function q(t,e,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=p(t);r&&o&&(e=f(e,r,o));const[i,n]=g(t);return d(i,n,e,l[c],a,s).map(j=>u(j,n)).filter(x)}export{b as execute,q as executeMany};

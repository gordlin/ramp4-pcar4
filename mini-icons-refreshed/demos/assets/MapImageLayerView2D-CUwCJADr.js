import{B as e,D as p,N as n,Y as l,n as d,aO as u,a9 as h}from"./main-CXTJrYrk.js";import{c}from"./GraphicsCollection-C6ZAC8lp.js";import{r as y}from"./BitmapContainer-DkmAxJ7w.js";import{S as f,y as _}from"./LayerView-IKlh2BcD.js";import{A as x}from"./GraphicsView2D-r60Hu0P9.js";import{h as H}from"./HighlightGraphicContainer-8E8no1FP.js";import{_ as w}from"./ExportStrategy-DNOYaXMx.js";import{u as v}from"./MapView-DXgmdT1q.js";import{y as I}from"./ExportImageParameters-fbh1Gtc3.js";import{i as $}from"./timeSupport-D4rLiYd5.js";import{i as V}from"./RefreshableLayerView-BkWdlnm8.js";import{S as E}from"./MapServiceLayerViewHelper-D74v6V-o.js";import{r as G}from"./drapedUtils-DtUcjdpO.js";import{c as P}from"./HighlightDefaults-BwX2G67Y.js";import"./preload-helper-ExcqyqRp.js";import"./WGLContainer-CFAd6RCr.js";import"./Utils-CC3nR1LQ.js";import"./enums-Dk3osxpS.js";import"./vec2f32-BbH2jxlN.js";import"./getDataTypeBytes-DflDeYgv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./ProgramTemplate-CCbPEeb0.js";import"./Texture-Ds7WFyAc.js";import"./signal-D6d4F9aP.js";import"./VertexArrayObject-vRY6Idig.js";import"./memoryEstimations-jye8GW5w.js";import"./Tile-NqUx_OCR.js";import"./common-DQOJ18NT.js";import"./TileKey-Box2hZAb.js";import"./vec2-maR1OrZI.js";import"./Queue-B3OINPDR.js";import"./ReactiveMap-DYumAS5v.js";import"./quickselect-QQC62dOK.js";import"./Query-B3wHXKkM.js";import"./Field-qWQ4BiqA.js";import"./fieldType-BAY-ZabS.js";import"./TimeExtent-pl8UrA47.js";import"./mat3-CruJiiUv.js";import"./vec32-CY5xch2-.js";import"./vec3f32-nZdmKIgz.js";import"./definitions-CPtb4TQS.js";import"./Container-D6RHS8yG.js";import"./parser-B2J_XuA2.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DCc6xr6i.js";import"./StyleDefinition-Bp1wY35y.js";import"./enums-CD-fX3vU.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./vec2f64-DohEyf3f.js";import"./featureConversionUtils-CW4wiU5k.js";import"./OptimizedFeature-D3MECz9o.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BitmapTechnique-B3V8Fira.js";import"./GraphShaderModule-CmfEnscR.js";import"./FramebufferObject-7CLwID_L.js";import"./ShaderBuilder-BZ2kf8c0.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./layerViewUtils-BW2OlaJf.js";import"./UpdatingHandles-CdH40bjh.js";import"./FieldsIndex-CYGegAK0.js";import"./timeZoneUtils-NHmIl2ax.js";import"./UpdateTracking2D-BJsUFXP7.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-Dblxd2e_.js";import"./utils-4usbGlDx.js";import"./defaultCIMValues-C-9JHzEu.js";import"./rasterizingUtils-D6Kol5dA.js";import"./floatRGBA-CINiV_az.js";import"./Rect-CUzevAry.js";import"./OverrideHelper-DQ74KnII.js";import"./colorUtils-D0_phz0E.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./quantizationUtils-B7DZFVug.js";import"./AttributeStore-BDjxeD35.js";import"./intl-BoGV7K5G.js";import"./labelUtils-BvsA-TUv.js";import"./queryUtils-C-kNUdUU.js";import"./projection-BpKbJTcz.js";import"./projectBuffer-B5xdwYlr.js";import"./normalizeUtils-DAoTYDOg.js";import"./normalizeUtilsCommon-CuVplVdW.js";import"./utils-BJxVbeTO.js";import"./utils-Dbwych2S.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DGM8rCEY.js";import"./TimeOnly-BqaOmD17.js";import"./FeatureCommandQueue-f_TD7MRr.js";import"./lengthUtils-DYdSYbuE.js";import"./streamLayerUtils-CKwt2uXH.js";import"./capabilities-Du2wdNlQ.js";import"./QueueProcessor-DlzFxfZS.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CYNDqRHM.js";import"./dehydratedFeatures-CapsVIgf.js";import"./AGraphicContainer-CGliQzsZ.js";import"./TechniqueInstance-BM_7WYCf.js";import"./TileContainer-BRI1qWYH.js";import"./TileInfo-BJ3eeYC4.js";import"./TileKey-DZd6gJy7.js";import"./Cyclical-DQ3B53pC.js";import"./CollectionFlattener-BVW-tHCz.js";import"./workers-CrEdm-cv.js";import"./themeUtils-BydFCO4_.js";import"./uuid-Cl5lrJ4c.js";import"./Map-oSjh4lBZ.js";import"./Basemap-DfyMb95H.js";import"./loadAll-DsTFf-qW.js";import"./PortalItem-cvziCImZ.js";import"./writeUtils-B8G77myp.js";import"./TablesMixin-Btd2sBIS.js";import"./Layer-CuyN8hRD.js";import"./HeightModelInfo-31cT7YRa.js";import"./ViewingMode-HRfKv6NR.js";import"./Scheduler-Cxu_2o2E.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-Bb_fB6ts.js";import"./Version-BILeeuDB.js";import"./ColorBackground-Cn_Lrrc5.js";import"./scaleUtils-CmTYSRXD.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-BkfdBGGE.js";import"./popupUtils-BUgRQez5.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new I({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return e([p()],i.prototype,"exportImageParameters",void 0),e([p({readOnly:!0})],i.prototype,"floors",null),e([p({readOnly:!0})],i.prototype,"exportImageVersion",null),e([p()],i.prototype,"layer",void 0),e([p()],i.prototype,"suspended",void 0),e([p({readOnly:!0})],i.prototype,"timeExtent",null),i=e([n("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(V(f(_))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,o=r>=10.3,g=r>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new H(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new E({createFetchPopupFeaturesQueryGeometry:(s,a)=>G(s,a,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,a)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:a})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new w({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,o){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,r,o){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t,i){const r=v(t);if(r.length===0)return h();const o=i?.name??P;return this._addHighlightGraphics(r,o),h(()=>!this.destroyed&&this._removeHighlightGraphics(r,o))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(r=>r.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(r=>r.uid),i)}};e([p()],m.prototype,"strategy",void 0),e([p()],m.prototype,"updating",void 0),m=e([n("esri.views.2d.layers.MapImageLayerView2D")],m);const Qi=m;export{Qi as default};

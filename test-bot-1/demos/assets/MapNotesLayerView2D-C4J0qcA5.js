import{aj as u,V as f,bR as w,Q as n,a6 as p,dt as h,a8 as y,v as _,J as V}from"./main-DhCkO6x8.js";import{S as v}from"./LayerView2D-BEAASDUi.js";import{t as g}from"./GraphicContainer-B3fz-yAS.js";import{A as c}from"./GraphicsView2D-BpTv8zb4.js";import{y as C}from"./LayerView-uKPuw5ra.js";import"./preload-helper-ExcqyqRp.js";import"./utils-BQBvadb7.js";import"./Container-DACLlzH4.js";import"./MapView-BLJAfcLF.js";import"./globalCss-DBf6_wCq.js";import"./Queue-CMeWMFl0.js";import"./signal-1tqDmWzw.js";import"./Version-1sV-a13p.js";import"./CollectionFlattener-I9Ask8tV.js";import"./workers-rvz01fcR.js";import"./intl-BM0ScOd3.js";import"./projection-XMojDmkC.js";import"./TileInfo-BpnIfF3z.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-Ddwy4Hn6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-gKFUwmta.js";import"./Map-DNLJ2JXZ.js";import"./Basemap-B-_ZmpSB.js";import"./loadAll-C6fo0vR6.js";import"./PortalItem-C4PLDbSe.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Cx1c8dwB.js";import"./common-DQOJ18NT.js";import"./Layer-Dk-Aoiwm.js";import"./TimeExtent-CSKDRK_F.js";import"./GraphicsCollection-Du-CY01W.js";import"./HeightModelInfo-CpcFvfPp.js";import"./timeZoneUtils-lL26W_Ep.js";import"./ReactiveMap-D8yb00wA.js";import"./Query-D-GnIcDK.js";import"./Field-BSz91qCt.js";import"./fieldType-DVnpjJ8m.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-ymenW1ub.js";import"./a11yUtils-B7GjH2yE.js";import"./heightModelInfoUtils-DyWviNSR.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-DZL_T1Qx.js";import"./utils-wQRRlsVR.js";import"./utils-BIWRJuwU.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-vuIGHmPn.js";import"./vec32-D7zWbFET.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-DOVpS2WS.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-D6o2oZvP.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-D5OzDK-q.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-BYViB-PJ.js";import"./EffectView-j-NnRWYS.js";import"./parser-DgLnQ4c0.js";import"./layerViewUtils-CTsBqS8s.js";import"./AGraphicContainer-DCnGSJC0.js";import"./TechniqueInstance-BjOSNsn2.js";import"./UpdateTracking2D-D_xNZrRP.js";import"./dataViewUtils-CDcgr7XS.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-CnANI8EZ.js";import"./VertexArrayObject-BcSJE1Yf.js";import"./memoryEstimations-CDEzjiIA.js";import"./TileContainer-BJNS3Ezl.js";import"./WGLContainer-BBiLMPgS.js";import"./ProgramTemplate-ua9aVMWS.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DGZV_l3E.js";import"./OptimizedFeatureSet-DXhwefCE.js";import"./OptimizedGeometry-B6cHdOyo.js";import"./FeatureCommandQueue-BVWVoEAD.js";import"./CIMSymbolHelper-DQFBgKFI.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-B9_Zixq4.js";import"./Rect-Cc6k4UKJ.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-Ctoyd3yc.js";import"./floatRGBA-fAeg97__.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DOFZT9Ay.js";import"./ShaderBuilder-D28vApc0.js";import"./BindType-BBwFZqyN.js";import"./lengthUtils-CjezYvDc.js";import"./QueueProcessor-D9ZBs-2n.js";import"./FieldsIndex-vb6382ol.js";import"./OverrideHelper-CpvjhZs6.js";import"./colorUtils-BNGzCboQ.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-D0Vc4cPe.js";import"./quantizationUtils-Bh26ymFj.js";import"./FeatureMetadata-ClpuxJFu.js";import"./diffUtils-D1ZY6bQb.js";import"./queryUtils-h2lRw5Ge.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Biy3HBBR.js";import"./TimeOnly-BL4_kz5X.js";import"./labelUtils-DRyIDHZ7.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BzDypkMF.js";import"./dehydratedFeatures-DkZm2DYB.js";const d="sublayers",m="layerView",b=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(t);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(o=>o&&o.uid):f.isCollection(i)&&(t=i.map(o=>o&&o.uid).toArray());const e=t?.filter(w);return e?.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const o=new g(this.view.featuresTilingScheme),s=new c({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new g(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new c({view:r,graphics:e.graphics,requestUpdateCallback:t,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(b.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const qt=l;export{qt as default};

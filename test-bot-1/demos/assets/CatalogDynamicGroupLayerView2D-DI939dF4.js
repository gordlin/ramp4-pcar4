import{v as i,x as a,J as f,V,dF as b,fd as C,Q as U,et as x,n as _,cb as w}from"./main-DhCkO6x8.js";import{S as H}from"./LayerView2D-BEAASDUi.js";import{y as I}from"./LayerView-uKPuw5ra.js";import"./preload-helper-ExcqyqRp.js";import"./utils-BQBvadb7.js";import"./Container-DACLlzH4.js";import"./MapView-BLJAfcLF.js";import"./globalCss-DBf6_wCq.js";import"./Queue-CMeWMFl0.js";import"./signal-1tqDmWzw.js";import"./Version-1sV-a13p.js";import"./CollectionFlattener-I9Ask8tV.js";import"./workers-rvz01fcR.js";import"./intl-BM0ScOd3.js";import"./projection-XMojDmkC.js";import"./TileInfo-BpnIfF3z.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-Ddwy4Hn6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-gKFUwmta.js";import"./Map-DNLJ2JXZ.js";import"./Basemap-B-_ZmpSB.js";import"./loadAll-C6fo0vR6.js";import"./PortalItem-C4PLDbSe.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Cx1c8dwB.js";import"./common-DQOJ18NT.js";import"./Layer-Dk-Aoiwm.js";import"./TimeExtent-CSKDRK_F.js";import"./GraphicsCollection-Du-CY01W.js";import"./HeightModelInfo-CpcFvfPp.js";import"./timeZoneUtils-lL26W_Ep.js";import"./ReactiveMap-D8yb00wA.js";import"./Query-D-GnIcDK.js";import"./Field-BSz91qCt.js";import"./fieldType-DVnpjJ8m.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-ymenW1ub.js";import"./a11yUtils-B7GjH2yE.js";import"./heightModelInfoUtils-DyWviNSR.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-DZL_T1Qx.js";import"./utils-wQRRlsVR.js";import"./utils-BIWRJuwU.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-vuIGHmPn.js";import"./vec32-D7zWbFET.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-DOVpS2WS.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-D6o2oZvP.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-D5OzDK-q.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-BYViB-PJ.js";import"./EffectView-j-NnRWYS.js";import"./parser-DgLnQ4c0.js";import"./layerViewUtils-CTsBqS8s.js";const y=Symbol(),O=n=>{let e=class extends n{constructor(){super(...arguments),this.layerViews=new V,this._debouncedUpdate=b(async()=>{const{layer:r,parent:o}=this,s=o?.footprintLayerView;let p=[];const m=this._createQuery();if(m&&s){const{features:u}=await s.queryFeatures(m);this.suspended||(p=u.map(h=>r.acquireLayer(h)))}this.removeHandles(y),this.addHandles(p,y)})}get creatingLayerViews(){return this.view?.layerViewManager.isCreatingLayerViewsForLayer(this.layer)??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(r=>r.updating)}enableLayerUpdates(){return C([this._updatingHandles.addWhen(()=>this.parent?.footprintLayerView?.dataUpdating===!1,()=>this.updateLayers()),this._updatingHandles.add(()=>[this.layer.maximumVisibleSublayers,this.layer.parent?.orderBy,this.parent?.footprintLayerView?.filter,this.parent?.footprintLayerView?.timeExtent,this.suspended],()=>this.updateLayers()),U(()=>this.removeHandles(y))])}updateLayers(){this.suspended?this.removeHandles(y):this._updatingHandles.addPromise(x(this._debouncedUpdate()).catch(r=>{_.getLogger(this).error(r)}))}_createQuery(){const r=this.parent?.footprintLayerView,o=this.layer?.parent;if(!r||!o||o.destroyed)return null;const{layer:{maximumVisibleSublayers:s},view:{scale:p}}=this;if(!s)return null;const{itemTypeField:m,itemSourceField:u,itemNameField:h,minScaleField:c,maxScaleField:L,objectIdField:v,orderBy:S}=o,$=w(`${c} IS NULL OR ${p} <= ${c} OR ${c} = 0`,`${L} IS NULL OR ${p} >= ${L}`),d=S?.find(l=>l.field&&!l.valueExpression),t=r.createQuery();if(t.returnGeometry=!1,t.num=s,t.outFields=[v,u,h],t.where=w(t.where,$),this.unsupportedItemTypes!=null){const l=`${m} NOT IN (${this.unsupportedItemTypes.map(F=>`'${F}'`)})`;t.where=w(t.where,l)}return d?.field&&(t.orderByFields=[`${d.field} ${d.order==="descending"?"DESC":"ASC"}`],t.outFields.push(d.field)),t}};return i([a({readOnly:!0})],e.prototype,"creatingLayerViews",null),i([a()],e.prototype,"layer",void 0),i([a()],e.prototype,"layerViews",void 0),i([a({readOnly:!0})],e.prototype,"unsupportedItemTypes",void 0),i([a()],e.prototype,"parent",void 0),i([a({readOnly:!0})],e.prototype,"isUpdating",null),e=i([f("esri.views.layers.CatalogDynamicGroupLayerView")],e),e};let g=class extends O(H(I)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new V}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(n){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((n,e)=>this.container.addChildAt(n.container,e))}};g=i([f("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],g);const ke=g;export{ke as default};

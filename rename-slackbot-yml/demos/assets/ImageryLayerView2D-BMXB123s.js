import{v as a,x as o,J as w,s as I,U as F,ap as E,a5 as V,bc as b,n as _,aj as P,dF as T,ar as D,a6 as f,f7 as z,b9 as U,ca as C,a9 as $,V as S,Q as R,bR as H,bE as j}from"./main-BVHtOxv7.js";import{c as G}from"./GraphicsCollection-CagoMrl9.js";import{d as O,f as L,a as M}from"./RasterVFDisplayObject-DxKPniYA.js";import{S as N}from"./LayerView2D-CJtrDHaJ.js";import{A as J}from"./GraphicsView2D-BL4_3Fpn.js";import{h as W}from"./HighlightGraphicContainer-n-WEPc0d.js";import{M as Q,m as K,f as X}from"./dataUtils-BcYyPmyf.js";import{r as Y}from"./BitmapContainer-Cfd9X0FI.js";import{n as Z}from"./Container-C3jZLIZd.js";import{l as tt}from"./BitmapTechnique-QAqo7X8I.js";import{_ as et}from"./ExportStrategy-DkbfZcQ0.js";import{j as it,O as rt,V as st}from"./rasterProjectionHelper-DKWclvw6.js";import{E as q}from"./MapView-CRPWli-N.js";import{n as at}from"./WGLContainer-DIQQmPNl.js";import{i as ot}from"./timeSupport-6NcQLfDR.js";import{b as nt}from"./Query-BlbP8i_S.js";import{p as ht}from"./popupUtils-vi2RvENZ.js";import{y as lt}from"./LayerView-eOWoSvFV.js";import{i as pt}from"./RefreshableLayerView-LefHHXHY.js";import{c as mt}from"./HighlightDefaults-D5QjSTI_.js";import"./preload-helper-ExcqyqRp.js";import"./mat3-CruJiiUv.js";import"./common-DQOJ18NT.js";import"./VertexArrayObject-D4uBT_HX.js";import"./Texture-C1MVRq6P.js";import"./signal-Dy5pYtri.js";import"./enums-Dk3osxpS.js";import"./getDataTypeBytes-DflDeYgv.js";import"./memoryEstimations-4360gtTp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./vec2f32-BbH2jxlN.js";import"./dataViewUtils-8kV7AMfK.js";import"./BoundingBox-CnpCxTZE.js";import"./utils-BQBvadb7.js";import"./ReactiveMap-D4clSo02.js";import"./layerViewUtils-CI9XG2Gt.js";import"./FieldsIndex-BbR7VldB.js";import"./timeZoneUtils-BH2IQNyw.js";import"./CIMSymbolHelper-BQYmQwZp.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-CDp9DDF5.js";import"./OptimizedGeometry-CFEsEUOO.js";import"./Rect-DQhWOLK1.js";import"./enums-BJSSbDkD.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-BI_R8JwN.js";import"./floatRGBA-Bi7OluJf.js";import"./definitions-CPtb4TQS.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./vec2-maR1OrZI.js";import"./OverrideHelper-DGvfBIKO.js";import"./colorUtils-CD6oK8qc.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-YuwTkhA_.js";import"./quantizationUtils-BQRogB2c.js";import"./FeatureMetadata-2ifF1ruY.js";import"./diffUtils-DpUyETaL.js";import"./UpdateTracking2D-C_rN9HtX.js";import"./UpdatingHandles-DED6IMhK.js";import"./queryUtils-CQxjmEjf.js";import"./projection-CrydI2xb.js";import"./normalizeUtils-CuY8DG20.js";import"./utils-DPOiuzHp.js";import"./utils-D9MbiUSG.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BkXZ8PJJ.js";import"./featureConversionUtils-s3JL_cmy.js";import"./OptimizedFeatureSet-0LMnyryk.js";import"./TimeOnly-COwbl4hl.js";import"./intl-Dzuz2qIQ.js";import"./labelUtils-AyS1fUrc.js";import"./FeatureCommandQueue-D9q0jAwg.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BGTqZt0Q.js";import"./FramebufferObject-C5aNzSa9.js";import"./ProgramTemplate-CQFdPoxS.js";import"./ShaderBuilder-C60cX5Ct.js";import"./BindType-BBwFZqyN.js";import"./lengthUtils-CwkzkhFR.js";import"./QueueProcessor-DEFiPsFI.js";import"./Queue-Dta2xkqk.js";import"./Tile-CFCiNV8j.js";import"./quickselect-QQC62dOK.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B0UfUSr4.js";import"./dehydratedFeatures-BO2T3rrl.js";import"./Field-CNjo_NIO.js";import"./fieldType-DWmD6OlO.js";import"./AGraphicContainer-CRCqY_5H.js";import"./TechniqueInstance-x_Cic2LM.js";import"./TileContainer-ClKkBu2d.js";import"./vec3f32-nZdmKIgz.js";import"./pixelRangeUtils-Esmjpmyq.js";import"./EffectView-B3oexPPq.js";import"./parser-BBOtPXDA.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DP9l3wuK.js";import"./TileInfo-CrBF9Hcp.js";import"./TileKey-DZd6gJy7.js";import"./globalCss-AlQtz0ni.js";import"./Version-CDiAHeur.js";import"./CollectionFlattener-Pn_ZAOyJ.js";import"./workers-B42DuMax.js";import"./jsxFactory-Bit0RCuS.js";import"./uuid-Cl5lrJ4c.js";import"./Map-z3fd-22m.js";import"./Basemap-CW0-_yXs.js";import"./loadAll-D5dUvUTP.js";import"./PortalItem-Bw4UuUg9.js";import"./Layer-B6JgVuMI.js";import"./TimeExtent-BOEUyCcp.js";import"./HeightModelInfo-D7o9RkaG.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-BVk1Y3yE.js";import"./heightModelInfoUtils-TYLaGF8c.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-DohEyf3f.js";import"./Scheduler--hqaXIoj.js";import"./vec32-xVdguBlU.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-zuoMFYds.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-BLddIyd3.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";const ct=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}get timeExtent(){return ot(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,r){const{layer:s}=this;if(!i)throw new I("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:n}=s,h=ht(s,r);if(!n||h==null)return[];const u=await h.getRequiredFields();F(r);const m=new nt;m.timeExtent=this.timeExtent,m.geometry=i,m.outFields=u,m.outSpatialReference=i.spatialReference;const{resolution:c,spatialReference:v}=this.view,g=this.view.type==="2d"?new E(c,c,v):new E(.5*c,.5*c,v),{returnTopmostRaster:d,showNoDataRecords:B}=h.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},k={returnDomainValues:!0,returnTopmostRaster:d,pixelSize:g,showNoDataRecords:B,signal:r?.signal};return s.queryVisibleRasters(m,k).then(A=>A)}async getSourceScale(){return await it(),await this.layer.load(),rt(this.layer.serviceRasterInfo,this.view.spatialReference)}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return a([o()],e.prototype,"layer",void 0),a([o()],e.prototype,"suspended",void 0),a([o({readOnly:!0})],e.prototype,"timeExtent",null),a([o()],e.prototype,"view",void 0),e=a([w("esri.views.layers.ImageryLayerView")],e),e};let l=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new Z,this.updateRequested=!1,this.type="imagery",this._bitmapView=new Y}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{b(e)||_.getLogger(this).error(e)})}hitTest(t){return new P({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new et({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{b(t)||_.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(s=>s.source).filter(s=>s.extent&&s.extent.intersects(e)).map(s=>({extent:s.extent,pixelBlock:s.originalPixelBlock})),r=Q(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const s=await this.layer.fetchImage(t,e,i,r);if(s.imageBitmap)return s.imageBitmap;const n=await this.layer.applyRenderer(s.pixelData,{signal:r.signal}),h=new tt(n.pixelBlock,n.extent?.clone(),s.pixelData.pixelBlock);return h.filter=u=>this.layer.applyFilter(u),h}};a([o()],l.prototype,"attached",void 0),a([o()],l.prototype,"container",void 0),a([o()],l.prototype,"layer",void 0),a([o()],l.prototype,"strategy",void 0),a([o()],l.prototype,"timeExtent",void 0),a([o()],l.prototype,"view",void 0),a([o()],l.prototype,"updateRequested",void 0),a([o()],l.prototype,"updating",null),a([o()],l.prototype,"type",void 0),l=a([w("esri.views.2d.layers.imagery.ImageryView2D")],l);const dt=l;class ut extends at{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[O],target:()=>this.children,drawPhase:q.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===q.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let y=class extends V{constructor(t){super(t),this._loading=null,this.update=T((e,i)=>this._update(e,i).catch(r=>{b(r)||_.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:s}=t.state,n=new D({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:s}),[h,u]=t.state.size;this._loading=this.fetchPixels(n,h,u,i);const m=await this._loading;this._addToDisplay(m,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(h=>h.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:s}=t,n=new L(s);n.offset=[0,0],n.symbolizerParameters=e,n.rawPixelData=t,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=s.width*e.symbolTileSize,n.height=s.height*e.symbolTileSize,this.container.children.forEach(h=>h.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};a([o()],y.prototype,"fetchPixels",void 0),a([o()],y.prototype,"container",void 0),a([o()],y.prototype,"_loading",void 0),a([o()],y.prototype,"updating",null),y=a([w("esri.views.2d.layers.imagery.ImageryVFStrategy")],y);const yt=y;let p=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new ut,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const s=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:h,width:u,height:m}=K(t,e,i,n,s);if(s!=null&&!s.intersects(t))return{extent:h,pixelBlock:null};const c={bbox:`${h.xmin}, ${h.ymin}, ${h.xmax}, ${h.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(c)){const d=this.getPixelData();if(d!=null&&`${d.extent.xmin}, ${d.extent.ymin}, ${d.extent.xmax}, ${d.extent.ymax}`===c.bbox)return d}const{pixelData:v}=await this.layer.fetchImage(h,u,m,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=c;const g=v?.pixelBlock;return g==null?{extent:h,pixelBlock:null}:{extent:h,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?X(g,"vector-uv"):g}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new yt({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(f(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),z),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){const t=this.container.children[0]?.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new P({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{b(e)||_.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,s=this._dataParameters.bbox===t.bbox;return e&&i&&r&&s}async _getProjectedFullExtent(t){try{return st(this.layer.fullExtent,t)}catch{try{const i=(await U(this.layer.url,{query:{option:"footprints",outSR:C(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?D.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t?.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([o()],p.prototype,"attached",void 0),a([o()],p.prototype,"container",void 0),a([o()],p.prototype,"layer",void 0),a([o()],p.prototype,"timeExtent",void 0),a([o()],p.prototype,"type",void 0),a([o()],p.prototype,"view",void 0),a([o()],p.prototype,"updating",null),p=a([w("esri.views.2d.layers.imagery.VectorFieldView2D")],p);const gt=p;let x=class extends ct(pt(N(lt))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new G,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){this.subview?.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new J({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new W(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([f(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},$),f(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},$),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),f(()=>this.layer.renderer,()=>this._setSubView())])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null,this._highlightView?.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:S.isCollection(t)?t.at(0):t)instanceof P))return R();let i=[];if(Array.isArray(t)||S.isCollection(t)?i=t.map(n=>n.clone()):t instanceof P&&(i=[t.clone()]),!i?.filter(H)?.length)return R();const s=e?.name??mt;return this._addHighlightGraphics(i,s),R(()=>!this.destroyed&&this._removeHighlightGraphics(i,s))}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map(i=>i.uid),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(i=>i.uid),e)}async doRefresh(){this.requestUpdate()}isUpdating(){const t=!this.subview||this.subview.updating||!!this._highlightView?.updating;return j("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${this._highlightView?.updating}
`),t}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_setSubView(){if(!this.view)return;const t=this.layer.renderer?.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:i}=this.subview;if(i===e)return this._attachSubview(this.subview),void(i==="flow"?this.subview.redrawOrRefetch():i==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),this.subview?.destroy()}this.subview=e==="imagery"?new dt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new gt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new M({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([o()],x.prototype,"pixelData",null),a([o()],x.prototype,"subview",void 0),x=a([w("esri.views.2d.layers.ImageryLayerView2D")],x);const zi=x;export{zi as default};

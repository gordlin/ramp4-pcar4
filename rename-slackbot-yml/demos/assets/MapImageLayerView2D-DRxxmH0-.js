import{v as e,x as p,J as n,bc as l,n as d,a6 as u,Q as h}from"./main-BVHtOxv7.js";import{c}from"./GraphicsCollection-CagoMrl9.js";import{r as y}from"./BitmapContainer-Cfd9X0FI.js";import{S as f}from"./LayerView2D-CJtrDHaJ.js";import{A as _}from"./GraphicsView2D-BL4_3Fpn.js";import{h as x}from"./HighlightGraphicContainer-n-WEPc0d.js";import{_ as H}from"./ExportStrategy-DkbfZcQ0.js";import{u as w}from"./MapView-CRPWli-N.js";import{y as v}from"./LayerView-eOWoSvFV.js";import{y as I}from"./ExportImageParameters-9d6VhTd-.js";import{i as $}from"./timeSupport-6NcQLfDR.js";import{i as V}from"./RefreshableLayerView-LefHHXHY.js";import{S as E}from"./MapServiceLayerViewHelper-B5Vc_rBf.js";import{r as G}from"./drapedUtils-BknOE7S3.js";import{c as P}from"./HighlightDefaults-D5QjSTI_.js";import"./preload-helper-ExcqyqRp.js";import"./WGLContainer-DIQQmPNl.js";import"./dataViewUtils-8kV7AMfK.js";import"./enums-Dk3osxpS.js";import"./getDataTypeBytes-DflDeYgv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./ProgramTemplate-CQFdPoxS.js";import"./Texture-C1MVRq6P.js";import"./signal-Dy5pYtri.js";import"./VertexArrayObject-D4uBT_HX.js";import"./memoryEstimations-4360gtTp.js";import"./mat2df32-orApM5a3.js";import"./mat2d-D9DBP-jx.js";import"./common-DQOJ18NT.js";import"./mat3-CruJiiUv.js";import"./vec32-xVdguBlU.js";import"./vec3f32-nZdmKIgz.js";import"./definitions-CPtb4TQS.js";import"./Container-C3jZLIZd.js";import"./EffectView-B3oexPPq.js";import"./parser-BBOtPXDA.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DP9l3wuK.js";import"./Tile-CFCiNV8j.js";import"./vec2-maR1OrZI.js";import"./Queue-Dta2xkqk.js";import"./ReactiveMap-D4clSo02.js";import"./quickselect-QQC62dOK.js";import"./Query-BlbP8i_S.js";import"./Field-CNjo_NIO.js";import"./fieldType-DWmD6OlO.js";import"./TimeExtent-BOEUyCcp.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./vec2f64-DohEyf3f.js";import"./featureConversionUtils-s3JL_cmy.js";import"./OptimizedFeatureSet-0LMnyryk.js";import"./OptimizedGeometry-CFEsEUOO.js";import"./BitmapTechnique-QAqo7X8I.js";import"./GraphShaderModule-BGTqZt0Q.js";import"./FramebufferObject-C5aNzSa9.js";import"./ShaderBuilder-C60cX5Ct.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-CI9XG2Gt.js";import"./FieldsIndex-BbR7VldB.js";import"./timeZoneUtils-BH2IQNyw.js";import"./CIMSymbolHelper-BQYmQwZp.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-CDp9DDF5.js";import"./Rect-DQhWOLK1.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-BI_R8JwN.js";import"./floatRGBA-Bi7OluJf.js";import"./OverrideHelper-DGvfBIKO.js";import"./colorUtils-CD6oK8qc.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-YuwTkhA_.js";import"./quantizationUtils-BQRogB2c.js";import"./FeatureMetadata-2ifF1ruY.js";import"./diffUtils-DpUyETaL.js";import"./UpdateTracking2D-C_rN9HtX.js";import"./UpdatingHandles-DED6IMhK.js";import"./queryUtils-CQxjmEjf.js";import"./projection-CrydI2xb.js";import"./normalizeUtils-CuY8DG20.js";import"./utils-DPOiuzHp.js";import"./utils-D9MbiUSG.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BkXZ8PJJ.js";import"./TimeOnly-COwbl4hl.js";import"./intl-Dzuz2qIQ.js";import"./labelUtils-AyS1fUrc.js";import"./FeatureCommandQueue-D9q0jAwg.js";import"./lengthUtils-CwkzkhFR.js";import"./QueueProcessor-DEFiPsFI.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B0UfUSr4.js";import"./dehydratedFeatures-BO2T3rrl.js";import"./AGraphicContainer-CRCqY_5H.js";import"./TechniqueInstance-x_Cic2LM.js";import"./TileContainer-ClKkBu2d.js";import"./TileInfo-CrBF9Hcp.js";import"./TileKey-DZd6gJy7.js";import"./globalCss-AlQtz0ni.js";import"./Version-CDiAHeur.js";import"./CollectionFlattener-Pn_ZAOyJ.js";import"./workers-B42DuMax.js";import"./jsxFactory-Bit0RCuS.js";import"./uuid-Cl5lrJ4c.js";import"./Map-z3fd-22m.js";import"./Basemap-CW0-_yXs.js";import"./loadAll-D5dUvUTP.js";import"./PortalItem-Bw4UuUg9.js";import"./Layer-B6JgVuMI.js";import"./HeightModelInfo-D7o9RkaG.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-BVk1Y3yE.js";import"./heightModelInfoUtils-TYLaGF8c.js";import"./ViewingMode-HRfKv6NR.js";import"./Scheduler--hqaXIoj.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-zuoMFYds.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-BLddIyd3.js";import"./scaleUtils-CV8w-XXj.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-Dbkdd8D3.js";import"./popupUtils-vi2RvENZ.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new I({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return e([p()],i.prototype,"exportImageParameters",void 0),e([p({readOnly:!0})],i.prototype,"floors",null),e([p({readOnly:!0})],i.prototype,"exportImageVersion",null),e([p()],i.prototype,"layer",void 0),e([p()],i.prototype,"suspended",void 0),e([p({readOnly:!0})],i.prototype,"timeExtent",null),i=e([n("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(V(f(v))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,o=r>=10.3,g=r>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new _({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new x(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new E({createFetchPopupFeaturesQueryGeometry:(s,a)=>G(s,a,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,a)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:a})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,o){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,r,o){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t,i){const r=w(t);if(r.length===0)return h();const o=i?.name??P;return this._addHighlightGraphics(r,o),h(()=>!this.destroyed&&this._removeHighlightGraphics(r,o))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(r=>r.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(r=>r.uid),i)}};e([p()],m.prototype,"strategy",void 0),e([p()],m.prototype,"updating",void 0),m=e([n("esri.views.2d.layers.MapImageLayerView2D")],m);const Yi=m;export{Yi as default};

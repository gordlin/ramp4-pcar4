import{a5 as g,a6 as h,dt as u,dG as b,d8 as y,v as a,x as m,J as w}from"./main-BJvUeSQ1.js";import{h as k}from"./UpdatingHandles-Dx0zkywT.js";import _ from"./GraphicsLayer-B6NfcUcD.js";import{T as v,j as f,a as B,w as M}from"./RouteLayerView2D--RF45PTk.js";import{l as V}from"./SketchViewModel-DyZspVoj.js";import"./preload-helper-ExcqyqRp.js";import"./GraphicsCollection-BipCZRdj.js";import"./Layer-CSMq0zKW.js";import"./TimeExtent-QyGlus-s.js";import"./ScaleRangeLayer-BxPPVReE.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DGcsTEnY.js";import"./parser-Bq4F9vsq.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-B5_AJTuB.js";import"./common-DQOJ18NT.js";import"./ElevationInfo-ZojHFVm7.js";import"./lengthUtils-BuQSFf-b.js";import"./CollectionFlattener-BSHYTf57.js";import"./LayerView2D-BO08YRp4.js";import"./utils-BQBvadb7.js";import"./Container-DenAksvw.js";import"./MapView-BzQTv-gE.js";import"./globalCss-CB66MMTC.js";import"./Queue-Pwlxnvmr.js";import"./signal-ApqBiOSe.js";import"./Version-I0HQvpeE.js";import"./workers-B9p0RhZo.js";import"./intl-BZ6zEyfS.js";import"./projection-Cn0Nbj-K.js";import"./TileInfo-Ck3IqVfK.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-D6l8WJ8s.js";import"./uuid-Cl5lrJ4c.js";import"./Map-T6P_l78e.js";import"./Basemap-D10V8pSR.js";import"./loadAll-BpZ5zAK9.js";import"./PortalItem-CqYFA1tM.js";import"./HeightModelInfo-DwKiKBBP.js";import"./timeZoneUtils-zaQ-Qufy.js";import"./ReactiveMap-Doms6qKl.js";import"./Query-DyhKz2Y6.js";import"./Field-CdkeeJ5X.js";import"./fieldType-DsEDG7-4.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-BMHDQC0h.js";import"./a11yUtils-CGduJHuM.js";import"./heightModelInfoUtils-D4nwNQ2O.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-DrgY6Wkl.js";import"./utils-DUN8-ymP.js";import"./utils-Cvj2dvoH.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-scT2mmhH.js";import"./vec32-C993yVtw.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-Du264TSh.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BJkHbCsT.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-CjiiBuBM.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-DiPQuvLe.js";import"./EffectView-BfC8sgBF.js";import"./layerViewUtils-BDu2oDzz.js";import"./GraphicContainer-CsOtj_2_.js";import"./AGraphicContainer-EDA7aIqS.js";import"./TechniqueInstance-daXaFtAA.js";import"./UpdateTracking2D-B0uLsNqf.js";import"./dataViewUtils-D26yeKdo.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-DnD8mFr3.js";import"./VertexArrayObject-x8LkVTiV.js";import"./memoryEstimations-D270L0vO.js";import"./TileContainer-B1X9a-kh.js";import"./WGLContainer-BOxv7-WF.js";import"./ProgramTemplate-0wYMJsT8.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-ddZ2CKlA.js";import"./OptimizedFeatureSet-CKGlAhF4.js";import"./OptimizedGeometry-CnTTjkMt.js";import"./FeatureCommandQueue-Q6O7z0YZ.js";import"./CIMSymbolHelper-DvD-mGra.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-DLEYC2Wp.js";import"./Rect-CQ0DkH0V.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-BTBGUCpr.js";import"./floatRGBA-BOf8UfEv.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-SzgrrN4r.js";import"./ShaderBuilder-DZRteZ1y.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CFZQHMrm.js";import"./GraphicsView2D-DaNLGfDM.js";import"./FieldsIndex-BRCA_rU-.js";import"./OverrideHelper-CLfQ1swQ.js";import"./colorUtils-CrzFQ6cq.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-BYVyHfhK.js";import"./quantizationUtils-BXNVDvvb.js";import"./FeatureMetadata-1UQVIrO1.js";import"./diffUtils-CYVDn1JL.js";import"./queryUtils-BCpLTAA5.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BBS_yauk.js";import"./TimeOnly-D2tibidL.js";import"./labelUtils-BZVWmzXj.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B3h0Cdtp.js";import"./dehydratedFeatures-DH5Q5F5F.js";import"./LayerView-DmEx373g.js";import"./quantityUtils-Lib1WwG0.js";import"./projectVectorToVector-CvrJSUES.js";import"./projectPointToVector-Cs1liNbp.js";import"./geodesicUtils-C6kHoacA.js";import"./plane-D8edIhAu.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-B97KdGf7.js";function n(r,t){r.networkFeature=t}function L(r){const t=s(r.graphic);return{...r,networkFeature:t}}function S(r){const t=r.graphics.map(e=>s(e));return{...r,networkFeatures:t}}function s(r){return r.networkFeature}function F(r){return r?.type==="point"||r?.type==="polyline"||r?.type==="polygon"}let p=class extends g{constructor(r){super(r),this._createMode=null,this._graphicsLayer=new _({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new k,this.enabled=!0,this._handleSketchViewModelEvents=async t=>{switch(t.type){case"update":switch(t.state){case"active":case"complete":for(const e of t.graphics)s(e).geometry=F(e.geometry)?e.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const e of t.graphics){const o=s(e);this._removeNetworkFeature(o)}break;case"create":if(t.graphic&&t.state==="complete"&&this._createMode){const e=t.graphic.geometry?.clone(),o=t.graphic.symbol?.clone();if(!e)break;switch(this._createMode){case"stop":{if(e.type!=="point")break;const{stops:i}=this.layer;if(i.length>0&&i.every(({geometry:l})=>!l)){i.at(0).geometry=e;break}if(i.length>1&&i.filter((l,d)=>d!==0).every(({geometry:l})=>!l)){i.at(1).geometry=e;break}const c=new M({geometry:e});i.add(c),n(t.graphic,c);break}case"point-barrier":{if(e.type!=="point")break;const i=new B({geometry:e,symbol:o});this.layer.pointBarriers.add(i),n(t.graphic,i);break}case"polyline-barrier":{if(e.type!=="polyline")break;const i=new f({geometry:e,symbol:o});this.layer.polylineBarriers.add(i),n(t.graphic,i);break}case"polygon-barrier":{if(e.type!=="polygon")break;const i=new v({geometry:e,symbol:o});this.layer.polygonBarriers.add(i),n(t.graphic,i);break}}}}(await this.view.whenLayerView(this.layer)).emit(t.type,t.type==="create"?L(t):S(t))}}initialize(){this._sketchViewModel=new V({layer:this._graphicsLayer,view:this.view}),this.addHandles([h(()=>this.enabled,r=>{r?this._activate():this._deactivate()},u),h(()=>{const{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}=this.layer;return{stops:r,pointBarriers:t,polylineBarriers:e,polygonBarriers:o}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),b(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=y(this._graphicsLayer),this._sketchViewModel=y(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(r=>s(r))}get updating(){return this._updatingHandles.updating}create(r){switch(this._createMode=r,r){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(r){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(r){const t=this._graphicsLayer.graphics.find(e=>s(e)===r);t&&this._graphicsLayer.remove(t),this._removeNetworkFeature(r)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const r=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(t=>t.toArray().map(e=>{const o=e.toGraphic();return o.networkFeature=e,o}));this._graphicsLayer.removeAll().addMany(r)}_removeNetworkFeature(r){switch(r.type){case"stop":this.layer.stops.remove(r);break;case"point-barrier":this.layer.pointBarriers.remove(r);break;case"polyline-barrier":this.layer.polylineBarriers.remove(r);break;case"polygon-barrier":this.layer.polygonBarriers.remove(r)}}};a([m()],p.prototype,"enabled",void 0),a([m({constructOnly:!0})],p.prototype,"layer",void 0),a([m({readOnly:!0})],p.prototype,"selectedNetworkFeatures",null),a([m()],p.prototype,"updating",null),a([m({constructOnly:!0})],p.prototype,"view",void 0),p=a([w("esri.views.2d.layers.support.RouteLayerInteraction")],p);export{p as RouteLayerInteraction};

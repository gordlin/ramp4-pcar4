import{a6 as l,dt as h,V as g,du as f,v as w,J as d}from"./main-DWt2iyon.js";import{p as n}from"./SimpleRenderer-B5OPNAxc.js";import{fromJSON as u}from"./jsonUtils-BesfLTQv.js";import{d as S}from"./FeatureSet-DILZDsBw.js";import{S as V}from"./LayerView2D-Cj1ZvVJG.js";import{t as b}from"./GraphicContainer-D4i0TTMG.js";import{A as _}from"./GraphicsView2D-Ci_MxnMt.js";import{y as T}from"./LayerView-zVkrtsAu.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-DMUWvKFJ.js";import"./colorRamps-D2fqsJL9.js";import"./ColorStop-jZpnpQWN.js";import"./visualVariableUtils-CsavZgO5.js";import"./lengthUtils-BRRcDPSJ.js";import"./typeUtils-CTAcSbrC.js";import"./ClassBreaksRenderer-CElE5cbt.js";import"./RendererLegendOptions-Ci-2-dkQ.js";import"./LRUCache-KuCFYePm.js";import"./MemCache-irwQDDqp.js";import"./Version-CtI-1e_n.js";import"./FieldsIndex-DT-V5OIt.js";import"./timeZoneUtils-DtZ-XC5F.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./heatmapUtils-6ZT-NP_k.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-CnLygKoD.js";import"./diffUtils-EOE4TSuT.js";import"./styleUtils-B5lLq-C_.js";import"./Field-Cc_cw68z.js";import"./fieldType-CswfTsla.js";import"./utils-BQBvadb7.js";import"./Container-ChGmiytP.js";import"./MapView-q7zsZ3e3.js";import"./globalCss-3GLHxlRx.js";import"./Queue-BkJfOG4_.js";import"./signal-DEMJAM83.js";import"./CollectionFlattener-DgxGRn-8.js";import"./workers-Cm_TiAsx.js";import"./intl-DlETW_i6.js";import"./projection-BCMlt4Kp.js";import"./TileInfo-ByD-eEug.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-Bg9ErVcZ.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-D7wzx25U.js";import"./Map-BAVgoczj.js";import"./Basemap-8MArTxFU.js";import"./loadAll-C6AYlXpb.js";import"./PortalItem-BBLzbVsF.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CccNqzIj.js";import"./Layer-D9dOskFb.js";import"./TimeExtent-DBN7OHey.js";import"./GraphicsCollection-BmB_DTvb.js";import"./HeightModelInfo-CeZC6aLb.js";import"./ReactiveMap-b7UkHHAO.js";import"./Query-Dgo2eOWJ.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-C8ug_WLA.js";import"./a11yUtils-nb-jzmM6.js";import"./heightModelInfoUtils-IDDO7c9C.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-BaW1Gbkg.js";import"./utils-Cki1zAWE.js";import"./utils-XQNh9AAS.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-DfYqChDh.js";import"./vec32-BqpHXf4n.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-CD2lw9JN.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DRQzUPWl.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-CmA3UMa_.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-DS04997N.js";import"./EffectView-yU0IGx73.js";import"./parser-DMvpgz-H.js";import"./layerViewUtils-CUIc0ndH.js";import"./AGraphicContainer-BX8EbQgc.js";import"./TechniqueInstance-BYw7hvri.js";import"./UpdateTracking2D-CWBdzcsw.js";import"./dataViewUtils-iWKLKV4R.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-hgrb7rCe.js";import"./VertexArrayObject-P84W1rTM.js";import"./memoryEstimations-BCeiz-tq.js";import"./TileContainer-BFx7acdN.js";import"./WGLContainer-DKTlowmm.js";import"./ProgramTemplate-i6EFh6Fh.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-ClvaAAM_.js";import"./OptimizedFeatureSet-Cxa8X-K8.js";import"./OptimizedGeometry-BD0hzAbI.js";import"./FeatureCommandQueue-BMKOgA1n.js";import"./CIMSymbolHelper-CFTm9jyY.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BAPqHrsi.js";import"./Rect-BfdjGCg_.js";import"./rasterizingUtils-CY9Q2NvD.js";import"./floatRGBA-B5YQyRfn.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BGa8SnhB.js";import"./ShaderBuilder-8E4rhRgy.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-eXVr2uNT.js";import"./OverrideHelper-5ADRJxTA.js";import"./colorUtils-0Jx7D2VL.js";import"./callExpressionWithFeature-B_FDvUsF.js";import"./quantizationUtils-DKPUvhx3.js";import"./FeatureMetadata-C2HhCdpY.js";import"./queryUtils-DVp9_YS3.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DNa_u_k0.js";import"./TimeOnly-BqkQmuYD.js";import"./labelUtils-BzyLlVC6.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-DXMVSPgL.js";import"./dehydratedFeatures-DpTO16c3.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=S.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new b(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Qi=y;export{Qi as default};

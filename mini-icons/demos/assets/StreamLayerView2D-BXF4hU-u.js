import{v as i,x as n,J as c,a6 as a,s as d,fd as h,Q as l,df as y}from"./main-BJiKaDIe.js";import{d as u}from"./FeatureSet-zQKxGzZi.js";import{n as _,d as g}from"./FeatureLayerView2D-CEkUj1aO.js";import f from"./FeatureFilter-1YDidj2i.js";import"./preload-helper-ExcqyqRp.js";import"./Field-C-Ka99DM.js";import"./fieldType-CbbGK4Cf.js";import"./UpdatingHandles-BmRGyG8F.js";import"./EffectView-CEfX17w0.js";import"./parser-kACXZrgt.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-D0tbvRRr.js";import"./common-DQOJ18NT.js";import"./featureConversionUtils-Bl_OqJem.js";import"./OptimizedFeatureSet-JzKRflzu.js";import"./memoryEstimations-DMaZ1Nko.js";import"./OptimizedGeometry-Wfvp03sU.js";import"./labelingInfo-C6skAhjR.js";import"./uuid-Cl5lrJ4c.js";import"./Query-DQVsH302.js";import"./TimeExtent-CEqTVXK1.js";import"./SimpleRenderer-BaCAoHtb.js";import"./commonProperties-CN44PgwJ.js";import"./colorRamps-CAOMUSy6.js";import"./ColorStop-BOHogALj.js";import"./visualVariableUtils-DypfxDGF.js";import"./lengthUtils-X-1E4n_K.js";import"./UniqueValueRenderer-qz5pvpsq.js";import"./diffUtils-13jpleu9.js";import"./RendererLegendOptions-BI2f8BTI.js";import"./styleUtils-DaW9HMJg.js";import"./RelationshipQuery-D11ietia.js";import"./NormalizationBinParametersMixin-BxuwM0e1.js";import"./labelUtils-wZD-YEFy.js";import"./timeSupport-BAMqvE7n.js";import"./globalCss-Bs7cvZi0.js";import"./Queue-DIIwX4_J.js";import"./signal-BJcTM886.js";import"./Version-DeHUAelS.js";import"./AttributeBinsFeatureSet-Cn8Cmmt_.js";import"./AttributeBinsQuery-DdNkY2cK.js";import"./queryUtils-a0FlnFcj.js";import"./projection-CAOdFT6O.js";import"./normalizeUtils-D07IHJfR.js";import"./utils-BU1VSCqe.js";import"./utils-DtwEJ3Bz.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-ZMRefy4t.js";import"./timeZoneUtils-5Nn8pyW5.js";import"./LayerView2D-BVEuoGyQ.js";import"./utils-BQBvadb7.js";import"./Container-B_dN5_lV.js";import"./MapView-C8gBNdJX.js";import"./CollectionFlattener-CNioQLZC.js";import"./workers-DW1_Iig1.js";import"./intl-Vf35IP85.js";import"./TileInfo-Dru6BdVb.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-DyUHsRg4.js";import"./Map-dFeO8ZWZ.js";import"./Basemap-scy1n1yk.js";import"./loadAll-BGAlaRtZ.js";import"./PortalItem-CxT9PUL9.js";import"./Layer-B0J4KWY9.js";import"./GraphicsCollection-CxRp_8qI.js";import"./HeightModelInfo-yfWL5plU.js";import"./ReactiveMap-CKBdoXIT.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-Ds8GQxHq.js";import"./a11yUtils-D0SaSiX6.js";import"./heightModelInfoUtils-CV1NFAD7.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-CV6yp4EG.js";import"./vec32-DU3YIsSv.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-B_ad1q3R.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BGrYr8IP.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-BPtA6_Vc.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-DEWBDlz7.js";import"./layerViewUtils-CtQGyCI1.js";import"./TechniqueInstance-B_CLPOfz.js";import"./UpdateTracking2D-BTQbssk4.js";import"./dataViewUtils-Cc2keWsl.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-DtnIYGbH.js";import"./VertexArrayObject-COGoas_e.js";import"./TileContainer-mUtL97j8.js";import"./WGLContainer-BdQ8Do6r.js";import"./ProgramTemplate-BONhLr42.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BgOOpGiZ.js";import"./CIMSymbolHelper-BhmoELxd.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-A4apwict.js";import"./Rect-Cy6HP8TW.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-DPdjdsoz.js";import"./floatRGBA-C8y9XJzp.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-C5ftnK-J.js";import"./ShaderBuilder-CSr5yeaA.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-BZHx4WEF.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./heatmapUtils-DW1xoMP4.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./SDFHelper-CL3hOTkb.js";import"./parquet-Dfgp_4ox.js";import"./displayFilterUtils-CHBCigvg.js";import"./FeatureEffect-C-PUn02l.js";import"./jsonUtils-BXn2tTkv.js";import"./floorFilterUtils-DKzVzLpH.js";import"./popupUtils-C7jsEUoA.js";import"./LayerView-CZ0SlbJA.js";import"./RefreshableLayerView-JX3mOfSs.js";const v=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:f})],e.prototype,"filter",void 0),e=i([c("esri.views.layers.StreamLayerView")],e),e};let s=class extends v(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new d("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(o=>this.on(o,e)));const r=["data-received","message-received"].includes(t);r&&this.getWorker().then(o=>o.streamMessenger.enableEvent(t,!0));const m=super.on(t,e),p=this;return l(()=>{m.remove(),r&&(p._workerProxy.closed||p.hasEventListener(t)||p.getWorker().then(o=>o.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,e){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new d("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return _(r.features.executeQueryForLatestObservations(this._cleanUpQuery(t),e).then(m=>{const p=u.fromJSON(m);return p.features.forEach(o=>{o.layer=this.layer,o.sourceLayer=this.layer}),p}),new u({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(t,e){return(await super.queryObjectIds(t,e)).filter(y)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),e=this;return{...t,get container(){return e.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([c("esri.views.2d.layers.StreamLayerView2D")],s);const ze=s;export{ze as default};
